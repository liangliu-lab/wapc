.TH "src.controller.DeviceMethods.DeviceMethods" 3 "Thu Mar 28 2013" "Version v1.0" "Labris Wireless Access Point Controller" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src.controller.DeviceMethods.DeviceMethods \- 
.PP
\fBDeviceMethods\fP class includes device oriented methods such CRUD operations\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits Thread\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "def \fB__init__\fP"
.br
.RI "\fIConstructer for \fBDeviceMethods\fP\&. \fP"
.ti -1c
.RI "def \fBcreate\fP"
.br
.RI "\fICreate method aims to create a new device insert it into database and apply the config regarding given brand, model and firmware\&. \fP"
.ti -1c
.RI "def \fBread\fP"
.br
.RI "\fI:param id: \fP"
.ti -1c
.RI "def \fBupdate\fP"
.br
.RI "\fIUpdate methods certainly moderated by $ edit [OPTIONS] command by CLI\&. \fP"
.ti -1c
.RI "def \fBset\fP"
.br
.RI "\fI.PP
.nf
This methods handle options and connect throug device by given name
.fi
.PP
 :param params: \fP"
.ti -1c
.RI "def \fBunset\fP"
.br
.RI "\fI.PP
.nf
This methods handle options and connect throug device by given name
.fi
.PP
 :param params: \fP"
.ti -1c
.RI "def \fBshow\fP"
.br
.RI "\fIShow methods submit returns where sh commands came from\&. \fP"
.ti -1c
.RI "def \fBgroup_set\fP"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fButils\fP"
.br
.ti -1c
.RI "\fBdatabase\fP"
.br
.ti -1c
.RI "\fBcommunication_interface\fP"
.br
.ti -1c
.RI "\fBscript\fP"
.br
.ti -1c
.RI "\fBcfg_device\fP"
.br
.ti -1c
.RI "\fBnow\fP"
.br
.ti -1c
.RI "\fBparams\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBDeviceMethods\fP class includes device oriented methods such CRUD operations\&. 

Methods covered by \fBDeviceMethods\fP and other controller methods in other might be similar each other but in deep they have their own custom attributes and variables to determine each process is focused to the target\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "def src\&.controller\&.DeviceMethods\&.DeviceMethods\&.__init__ (self, params)"

.PP
Constructer for \fBDeviceMethods\fP\&. 
.SH "Member Function Documentation"
.PP 
.SS "def src\&.controller\&.DeviceMethods\&.DeviceMethods\&.create (self, params)"

.PP
Create method aims to create a new device insert it into database and apply the config regarding given brand, model and firmware\&. .PP
.nf
     Create method is called by Main.add method by given type. Type should be
     provided as 'device'. Also when adding a new device arguments listed
     below have to be provided:

     <h3>Usage: $ add [OPTIONS]</h3>
     Add device, group, vlan, config etc with given parameters
     <ul>
     <li>[-t],[--type] Define type device, group, vlan, config</li>
     <li>[-I],[--ip] Use this params when adding some new variables which 
     needs an ip such as device, config, etc.</li>
     <li>[-n],[--name] To set a name to related type variable</li>
     <li>[-b],[--brand] To set device brand to relate with its model and/or 
     firmware</li>
     <li>[-m],[--model] To set device model to relate with its config file
     </li>
     <li>[-F],[--firmware] To set device firmware to relate with its config
     file</li>
     <li>[-R],[--relation] To set device relation one of MASTER of SLAVE</li>
     <li>[-D],[--description] To set a description to related type variable
     </li>
     <li>[-u],[--username] Provide a username which will be used to connect
     device</li>
     <li>[-p],[--password] Provide a password which will be used to connect 
     and configure device</li>
     </ul>

     If there is no parameter provided every required parameter will be
     gathered by asking the user to provide every single parameter.
.fi
.PP
.PP
\fBParameters:\fP
.RS 4
\fIparams\fP 
.RE
.PP

.SS "def src\&.controller\&.DeviceMethods\&.DeviceMethods\&.group_set (self, config, params)"

.SS "def src\&.controller\&.DeviceMethods\&.DeviceMethods\&.read (self, cid)"

.PP
:param id: 
.SS "def src\&.controller\&.DeviceMethods\&.DeviceMethods\&.set (self, params)"

.PP
.PP
.nf
This methods handle options and connect throug device by given name
.fi
.PP
 :param params: 
.SS "def src\&.controller\&.DeviceMethods\&.DeviceMethods\&.show (self, params)"

.PP
Show methods submit returns where sh commands came from\&. .PP
.nf
     Show methods gathers parameter, read commands file regarding device
     brand, model etc and then generate a JSON file and execute this file
     with CommunicationInterface
.fi
.PP
.PP
\fBParameters:\fP
.RS 4
\fIparams\fP 
.RE
.PP

.SS "def src\&.controller\&.DeviceMethods\&.DeviceMethods\&.unset (self, params)"

.PP
.PP
.nf
This methods handle options and connect throug device by given name
.fi
.PP
 :param params: 
.SS "def src\&.controller\&.DeviceMethods\&.DeviceMethods\&.update (self, params)"

.PP
Update methods certainly moderated by $ edit [OPTIONS] command by CLI\&. This methods only inherit update database records by no touching physical device config\&.
.PP
params comes from main class 
.SH "Member Data Documentation"
.PP 
.SS "src\&.controller\&.DeviceMethods\&.DeviceMethods\&.cfg_device"

.SS "src\&.controller\&.DeviceMethods\&.DeviceMethods\&.communication_interface"

.SS "src\&.controller\&.DeviceMethods\&.DeviceMethods\&.database"

.SS "src\&.controller\&.DeviceMethods\&.DeviceMethods\&.now"

.SS "src\&.controller\&.DeviceMethods\&.DeviceMethods\&.params"

.SS "src\&.controller\&.DeviceMethods\&.DeviceMethods\&.script"

.SS "src\&.controller\&.DeviceMethods\&.DeviceMethods\&.utils"


.SH "Author"
.PP 
Generated automatically by Doxygen for Labris Wireless Access Point Controller from the source code\&.
