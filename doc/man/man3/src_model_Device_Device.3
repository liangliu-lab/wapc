.TH "src.model.Device.Device" 3 "Thu Mar 28 2013" "Version v1.0" "Labris Wireless Access Point Controller" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src.model.Device.Device \- 
.PP
\fBDevice\fP object class to create a runtime instance while adding a new device\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBsrc\&.model\&.Config\&.Config\fP, and \fBsrc\&.model\&.Config\&.Config\fP\&.
.PP
Inherited by \fBsrc\&.model\&.Group\&.Group\fP, and \fBsrc\&.model\&.Group\&.Group\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "def \fB__init__\fP"
.br
.RI "\fIConstructer for \fBDevice\fP model\&. \fP"
.ti -1c
.RI "def \fBset_id\fP"
.br
.RI "\fISetter for id variable is a private method\&. \fP"
.ti -1c
.RI "def \fBget_id\fP"
.br
.RI "\fIGetter for instance device id\&. \fP"
.ti -1c
.RI "def \fBset_device_brand\fP"
.br
.RI "\fISetter for brand variable\&. \fP"
.ti -1c
.RI "def \fBget_brand\fP"
.br
.RI "\fIGetter for brand variable\&. \fP"
.ti -1c
.RI "def \fBset_model\fP"
.br
.RI "\fISetter for model variable\&. \fP"
.ti -1c
.RI "def \fBget_model\fP"
.br
.RI "\fIGetter for model\&. \fP"
.ti -1c
.RI "def \fBset_firmware\fP"
.br
.RI "\fISetter for \fBDevice\fP firmware variable\&. \fP"
.ti -1c
.RI "def \fBget_firmware\fP"
.br
.RI "\fIGetter for firmware\&. \fP"
.ti -1c
.RI "def \fBset_relation\fP"
.br
.RI "\fISetter for relation variable\&. \fP"
.ti -1c
.RI "def \fBget_relation\fP"
.br
.RI "\fIGetter for relation variable\&. \fP"
.ti -1c
.RI "def \fBset_name\fP"
.br
.RI "\fISetter for name parameter\&. \fP"
.ti -1c
.RI "def \fBget_name\fP"
.br
.RI "\fIGetter for name variable\&. \fP"
.ti -1c
.RI "def \fBset_description\fP"
.br
.RI "\fISetter for desctiption variable to describe device in detail\&. \fP"
.ti -1c
.RI "def \fBget_description\fP"
.br
.RI "\fIGetter for description\&. \fP"
.ti -1c
.RI "def \fBset_config_id\fP"
.br
.RI "\fISetter for config_id\&. \fP"
.ti -1c
.RI "def \fBget_config_id\fP"
.br
.ti -1c
.RI "def \fBset_config\fP"
.br
.RI "\fISetter to set a \fBConfig\fP model into device instance config\&. \fP"
.ti -1c
.RI "def \fBget_config\fP"
.br
.RI "\fIGetter for \fBDevice\fP model to get instance \fBConfig\fP\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
\fBDevice\fP object class to create a runtime instance while adding a new device\&. 

Each device has its own configuration values provided by user via CLI and its configuration is kept on a path defined like: brand/model/firmware under root config path\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "def src\&.model\&.Device\&.Device\&.__init__ (self)"

.PP
Constructer for \fBDevice\fP model\&. 
.SH "Member Function Documentation"
.PP 
.SS "def src\&.model\&.Device\&.Device\&.get_brand (self)"

.PP
Getter for brand variable\&. \fBReturns:\fP
.RS 4
brand variable 
.RE
.PP

.SS "def src\&.model\&.Device\&.Device\&.get_config (self)"

.PP
Getter for \fBDevice\fP model to get instance \fBConfig\fP\&. \fBReturns:\fP
.RS 4
\fBConfig\fP model 
.RE
.PP

.SS "def src\&.model\&.Device\&.Device\&.get_config_id (self)"
\fBReturns:\fP
.RS 4
instance configuration id 
.RE
.PP

.SS "def src\&.model\&.Device\&.Device\&.get_description (self)"

.PP
Getter for description\&. \fBReturns:\fP
.RS 4
instance description 
.RE
.PP

.SS "def src\&.model\&.Device\&.Device\&.get_firmware (self)"

.PP
Getter for firmware\&. \fBReturns:\fP
.RS 4
instance firmware 
.RE
.PP

.SS "def src\&.model\&.Device\&.Device\&.get_id (self)"

.PP
Getter for instance device id\&. \fBReturns:\fP
.RS 4
d_id as device id 
.RE
.PP

.SS "def src\&.model\&.Device\&.Device\&.get_model (self)"

.PP
Getter for model\&. \fBReturns:\fP
.RS 4
model 
.RE
.PP

.SS "def src\&.model\&.Device\&.Device\&.get_name (self)"

.PP
Getter for name variable\&. \fBReturns:\fP
.RS 4
instance name 
.RE
.PP

.SS "def src\&.model\&.Device\&.Device\&.get_relation (self)"

.PP
Getter for relation variable\&. \fBReturns:\fP
.RS 4
instance relation 
.RE
.PP

.SS "def src\&.model\&.Device\&.Device\&.set_config (self, config)"

.PP
Setter to set a \fBConfig\fP model into device instance config\&. \fBParameters:\fP
.RS 4
\fIconfig\fP dict is a \fBConfig\fP model as a dictionary object 
.RE
.PP

.SS "def src\&.model\&.Device\&.Device\&.set_config_id (self, config_id)"

.PP
Setter for config_id\&. \fBParameters:\fP
.RS 4
\fIconfig_id\fP int \fBConfig\fP model instance id at runtime 
.RE
.PP

.SS "def src\&.model\&.Device\&.Device\&.set_description (self, description)"

.PP
Setter for desctiption variable to describe device in detail\&. \fBParameters:\fP
.RS 4
\fIdescription\fP text Description 
.RE
.PP

.SS "def src\&.model\&.Device\&.Device\&.set_device_brand (self, brand)"

.PP
Setter for brand variable\&. .PP
.nf
     Brand parameter is a required parameter. It has to be provided by user
     and also required configuration .conf file should be under well-formed
     folder structure to gather configuration file when adding a new device
     into inventory. Otherwise no configuration will be loaded to the device.

     If brand parameter is provided but model or firmware parameters not then
     user or system administrator should create path as below:
     brand/default/default

     The software will look the given path if it is provided otherwise it
     assumes default path already exists.
.fi
.PP
.PP
\fBParameters:\fP
.RS 4
\fIbrand\fP string Variable defines such as Cisco, 3comm, etc\&. 
.RE
.PP

.SS "def src\&.model\&.Device\&.Device\&.set_firmware (self, firmware)"

.PP
Setter for \fBDevice\fP firmware variable\&. \fBParameters:\fP
.RS 4
\fIfirmware\fP string 
.RE
.PP

.SS "def src\&.model\&.Device\&.Device\&.set_id (self, d_id)"

.PP
Setter for id variable is a private method\&. \fBParameters:\fP
.RS 4
\fId_id\fP int gathered from database 
.RE
.PP

.SS "def src\&.model\&.Device\&.Device\&.set_model (self, model)"

.PP
Setter for model variable\&. \fBParameters:\fP
.RS 4
\fImodel\fP string Regarding provided brand 
.RE
.PP

.SS "def src\&.model\&.Device\&.Device\&.set_name (self, name)"

.PP
Setter for name parameter\&. .PP
.nf
     Name parameter is a variable to define a nickname for device(s). It
     should be unique.
.fi
.PP
.PP
\fBParameters:\fP
.RS 4
\fIname\fP string Nickname for device as unique 
.RE
.PP

.SS "def src\&.model\&.Device\&.Device\&.set_relation (self, relation)"

.PP
Setter for relation variable\&. .PP
.nf
     Relation variable is important to define what relation exists between
     devices in inventory either Master or Slave. Devices configure
     themselves to work in a master/slave topology therefore this variable
     has to bet. Otherwise the application will assume the device recently
     been adding is a slave. There has to be one master to work devices
     effectively.
.fi
.PP
.PP
\fBParameters:\fP
.RS 4
\fIrelation\fP string master or slave 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Labris Wireless Access Point Controller from the source code\&.
